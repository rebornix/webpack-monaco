import { IPartService } from 'vs/workbench/services/part/common/partService';
import { IWorkbenchEditorService } from 'vs/workbench/services/editor/common/editorService';
import { IEditorGroupService } from 'vs/workbench/services/group/common/groupService';
import { IMessageService } from 'vs/platform/message/common/message';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IWorkspaceConfigurationService } from 'vs/workbench/services/configuration/common/configuration';
import { IWindowsService, IWindowService } from 'vs/platform/windows/common/windows';
import { IContextMenuService } from 'vs/platform/contextview/browser/contextView';
import { IEnvironmentService } from 'vs/platform/environment/common/environment';
import { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';
import { IConfigurationEditingService } from 'vs/workbench/services/configuration/common/configurationEditing';
import { ITitleService } from 'vs/workbench/services/title/common/titleService';
import { IWorkbenchThemeService } from 'vs/workbench/services/themes/common/workbenchThemeService';
import { ICommandService } from 'vs/platform/commands/common/commands';
import { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';
import { IExtensionService } from 'vs/platform/extensions/common/extensions';
import { Themable } from 'vs/workbench/common/theme';
import { IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';
import { IWorkspaceEditingService } from 'vs/workbench/services/workspace/common/workspaceEditing';
export declare class ElectronWindow extends Themable {
    private editorService;
    private editorGroupService;
    private partService;
    private windowsService;
    private windowService;
    private configurationService;
    private titleService;
    protected themeService: IWorkbenchThemeService;
    private messageService;
    private configurationEditingService;
    private commandService;
    private extensionService;
    private viewletService;
    private contextMenuService;
    private keybindingService;
    private environmentService;
    private telemetryService;
    private contextService;
    private workspaceEditingService;
    private static AUTO_SAVE_SETTING;
    constructor(shellContainer: HTMLElement, editorService: IWorkbenchEditorService, editorGroupService: IEditorGroupService, partService: IPartService, windowsService: IWindowsService, windowService: IWindowService, configurationService: IWorkspaceConfigurationService, titleService: ITitleService, themeService: IWorkbenchThemeService, messageService: IMessageService, configurationEditingService: IConfigurationEditingService, commandService: ICommandService, extensionService: IExtensionService, viewletService: IViewletService, contextMenuService: IContextMenuService, keybindingService: IKeybindingService, environmentService: IEnvironmentService, telemetryService: ITelemetryService, contextService: IWorkspaceContextService, workspaceEditingService: IWorkspaceEditingService);
    private registerListeners();
    private setup();
    private resolveKeybindings(actionIds);
    private onAddFolders(request);
    private onOpenFiles(request);
    private openResources(resources, diffMode);
    private toInputs(paths, isNew);
    private toggleAutoSave();
}
