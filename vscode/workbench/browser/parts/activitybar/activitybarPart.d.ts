import 'vs/css!./media/activitybarpart';
import { Builder, Dimension } from 'vs/base/browser/builder';
import { Part } from 'vs/workbench/browser/part';
import { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';
import { IActivityBarService, IBadge } from 'vs/workbench/services/activity/common/activityBarService';
import { IPartService } from 'vs/workbench/services/part/common/partService';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { IExtensionService } from 'vs/platform/extensions/common/extensions';
import { IStorageService } from 'vs/platform/storage/common/storage';
import { IContextMenuService } from 'vs/platform/contextview/browser/contextView';
import { IDisposable } from 'vs/base/common/lifecycle';
import { IThemeService } from 'vs/platform/theme/common/themeService';
export declare class ActivitybarPart extends Part implements IActivityBarService {
    private viewletService;
    private extensionService;
    private storageService;
    private contextMenuService;
    private instantiationService;
    private partService;
    private static readonly ACTIVITY_ACTION_HEIGHT;
    private static readonly PINNED_VIEWLETS;
    _serviceBrand: any;
    private dimension;
    private globalActionBar;
    private globalActivityIdToActions;
    private viewletSwitcherBar;
    private viewletOverflowAction;
    private viewletOverflowActionItem;
    private viewletIdToActions;
    private viewletIdToActionItems;
    private viewletIdToActivityStack;
    private memento;
    private pinnedViewlets;
    private activeUnpinnedViewlet;
    constructor(id: string, viewletService: IViewletService, extensionService: IExtensionService, storageService: IStorageService, contextMenuService: IContextMenuService, instantiationService: IInstantiationService, partService: IPartService, themeService: IThemeService);
    private registerListeners();
    private onDidViewletOpen(viewlet);
    private onDidViewletClose(viewlet);
    showGlobalActivity(globalActivityId: string, badge: IBadge): IDisposable;
    showActivity(viewletId: string, badge: IBadge, clazz?: string): IDisposable;
    private updateActivity(viewletId);
    createContentArea(parent: Builder): Builder;
    updateStyles(): void;
    private showContextMenu(e);
    private createViewletSwitcher(div);
    private createGlobalActivityActionBar(container);
    private updateViewletSwitcher();
    private getOverflowingViewlets();
    private getVisibleViewlets();
    private getPinnedViewlets();
    private pullViewlet(viewletId);
    private toAction(viewlet);
    getPinned(): string[];
    unpin(viewletId: string): void;
    isPinned(viewletId: string): boolean;
    pin(viewletId: string, update?: boolean): void;
    move(viewletId: string, toViewletId: string): void;
    /**
     * Layout title, content and status area in the given dimension.
     */
    layout(dimension: Dimension): Dimension[];
    dispose(): void;
    shutdown(): void;
}
