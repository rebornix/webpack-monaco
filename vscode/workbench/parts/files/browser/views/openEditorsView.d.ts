import { TPromise } from 'vs/base/common/winjs.base';
import { IAction } from 'vs/base/common/actions';
import { IContextMenuService } from 'vs/platform/contextview/browser/contextView';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { IEditorGroupService } from 'vs/workbench/services/group/common/groupService';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { IKeybindingService } from 'vs/platform/keybinding/common/keybinding';
import { CollapsibleView, IViewletViewOptions } from 'vs/workbench/parts/views/browser/views';
import { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';
import { IViewletService } from 'vs/workbench/services/viewlet/browser/viewlet';
import { IUntitledEditorService } from 'vs/workbench/services/untitled/common/untitledEditorService';
import { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
import { IListService } from 'vs/platform/list/browser/listService';
import { IThemeService } from 'vs/platform/theme/common/themeService';
export declare class OpenEditorsView extends CollapsibleView {
    private instantiationService;
    private textFileService;
    private configurationService;
    private listService;
    private untitledEditorService;
    private viewletService;
    private themeService;
    private static DEFAULT_VISIBLE_OPEN_EDITORS;
    private static DEFAULT_DYNAMIC_HEIGHT;
    static ID: string;
    static NAME: string;
    private visibleOpenEditors;
    private dynamicHeight;
    private model;
    private dirtyCountElement;
    private structuralTreeRefreshScheduler;
    private structuralRefreshDelay;
    private groupToRefresh;
    private fullRefreshNeeded;
    private openEditorsFocusedContext;
    private explorerFocusedContext;
    constructor(initialSize: number, options: IViewletViewOptions, instantiationService: IInstantiationService, contextMenuService: IContextMenuService, textFileService: ITextFileService, editorGroupService: IEditorGroupService, configurationService: IConfigurationService, keybindingService: IKeybindingService, listService: IListService, untitledEditorService: IUntitledEditorService, contextKeyService: IContextKeyService, viewletService: IViewletService, themeService: IThemeService);
    renderHeader(container: HTMLElement): void;
    getActions(): IAction[];
    renderBody(container: HTMLElement): void;
    create(): TPromise<void>;
    private registerListeners();
    private onEditorStacksModelChanged(e);
    private structuralTreeUpdate();
    private highlightActiveEditor();
    private onConfigurationUpdated(configuration);
    private updateDirtyIndicator();
    private getExpandedBodySize(model);
    private static computeExpandedBodySize(model, visibleOpenEditors?, dynamicHeight?);
    setStructuralRefreshDelay(delay: number): void;
    getOptimalWidth(): number;
}
