import { IWorkbenchContribution } from 'vs/workbench/common/contributions';
import { IDebugService } from 'vs/workbench/parts/debug/common/debug';
import { IModelService } from 'vs/editor/common/services/modelService';
export declare class DebugEditorModelManager implements IWorkbenchContribution {
    private modelService;
    private debugService;
    static ID: string;
    private modelDataMap;
    private toDispose;
    constructor(modelService: IModelService, debugService: IDebugService);
    getId(): string;
    dispose(): void;
    private registerListeners();
    private onModelAdded(model);
    private onModelRemoved(model);
    private onFocusStackFrame();
    private createCallStackDecorations(modelUriStr);
    private onModelDecorationsChanged(modelUrlStr, e);
    private onBreakpointsChange();
    private updateBreakpoints(modelData, newBreakpoints);
    private createBreakpointDecorations(breakpoints);
    private getBreakpointDecorationOptions(breakpoint);
    private static BREAKPOINT_DECORATION;
    private static BREAKPOINT_DISABLED_DECORATION;
    private static BREAKPOINT_UNVERIFIED_DECORATION;
    private static BREAKPOINT_DIRTY_DECORATION;
    private static BREAKPOINT_UNSUPPORTED_DECORATION;
    private static TOP_STACK_FRAME_MARGIN;
    private static FOCUSED_STACK_FRAME_MARGIN;
    private static TOP_STACK_FRAME_DECORATION;
    private static TOP_STACK_FRAME_EXCEPTION_DECORATION;
    private static TOP_STACK_FRAME_INLINE_DECORATION;
    private static FOCUSED_STACK_FRAME_DECORATION;
}
