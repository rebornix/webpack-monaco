import { TPromise } from 'vs/base/common/winjs.base';
import { Range } from 'vs/editor/common/core/range';
import { IContentWidget, ICodeEditor, IContentWidgetPosition } from 'vs/editor/browser/editorBrowser';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { IDebugService } from 'vs/workbench/parts/debug/common/debug';
import { IListService } from 'vs/platform/list/browser/listService';
import { IThemeService } from 'vs/platform/theme/common/themeService';
export declare class DebugHoverWidget implements IContentWidget {
    private editor;
    private debugService;
    private listService;
    private themeService;
    static ID: string;
    allowEditorOverflow: boolean;
    private _isVisible;
    private domNode;
    private tree;
    private showAtPosition;
    private highlightDecorations;
    private complexValueContainer;
    private treeContainer;
    private complexValueTitle;
    private valueContainer;
    private stoleFocus;
    private toDispose;
    private scrollbar;
    constructor(editor: ICodeEditor, debugService: IDebugService, listService: IListService, instantiationService: IInstantiationService, themeService: IThemeService);
    private create(instantiationService);
    private registerListeners();
    isVisible(): boolean;
    getId(): string;
    getDomNode(): HTMLElement;
    private getExactExpressionRange(lineContent, range);
    showAt(range: Range, focus: boolean): TPromise<void>;
    private doFindExpression(container, namesToFind);
    private findExpressionInStackFrame(namesToFind, expressionRange);
    private doShow(position, expression, focus, forceValueHover?);
    private layoutTree();
    hide(): void;
    getPosition(): IContentWidgetPosition;
    dispose(): void;
}
