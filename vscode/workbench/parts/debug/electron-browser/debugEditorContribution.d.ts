import { TPromise } from 'vs/base/common/winjs.base';
import { ICodeEditor } from 'vs/editor/browser/editorBrowser';
import { ICodeEditorService } from 'vs/editor/common/services/codeEditorService';
import { Range } from 'vs/editor/common/core/range';
import { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';
import { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';
import { IConfigurationService } from 'vs/platform/configuration/common/configuration';
import { ICommandService } from 'vs/platform/commands/common/commands';
import { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
import { IContextMenuService } from 'vs/platform/contextview/browser/contextView';
import { IDebugEditorContribution, IDebugService } from 'vs/workbench/parts/debug/common/debug';
import { IListService } from 'vs/platform/list/browser/listService';
import { IThemeService } from 'vs/platform/theme/common/themeService';
export declare class DebugEditorContribution implements IDebugEditorContribution {
    private editor;
    private debugService;
    private contextMenuService;
    private instantiationService;
    private commandService;
    private codeEditorService;
    private telemetryService;
    private configurationService;
    private toDispose;
    private hoverWidget;
    private showHoverScheduler;
    private hideHoverScheduler;
    private removeInlineValuesScheduler;
    private hoverRange;
    private breakpointHintDecoration;
    private breakpointWidget;
    private breakpointWidgetVisible;
    private wordToLineNumbersMap;
    private exceptionWidget;
    private configurationWidget;
    constructor(editor: ICodeEditor, debugService: IDebugService, contextMenuService: IContextMenuService, instantiationService: IInstantiationService, contextKeyService: IContextKeyService, commandService: ICommandService, codeEditorService: ICodeEditorService, telemetryService: ITelemetryService, listService: IListService, configurationService: IConfigurationService, themeService: IThemeService);
    private getContextMenuActions(breakpoints, uri, lineNumber);
    private registerListeners();
    getId(): string;
    showHover(range: Range, focus: boolean): TPromise<void>;
    private marginFreeFromNonDebugDecorations(line);
    private ensureBreakpointHintDecoration(showBreakpointHintAtLineNumber);
    private onFocusStackFrame(sf);
    private hideHoverWidget();
    private onEditorMouseDown(mouseEvent);
    private onEditorMouseMove(mouseEvent);
    private onKeyDown(e);
    showBreakpointWidget(lineNumber: number, column: number): void;
    closeBreakpointWidget(): void;
    private toggleExceptionWidget();
    private showExceptionWidget(exceptionInfo, lineNumber, column);
    private closeExceptionWidget();
    private updateConfigurationWidgetVisibility();
    addLaunchConfiguration(): TPromise<any>;
    private static BREAKPOINT_HELPER_DECORATION;
    private updateInlineDecorations(stackFrame);
    private createInlineValueDecorationsInsideRange(expressions, range);
    private createInlineValueDecoration(lineNumber, contentText);
    private getWordToPositionsMap();
    dispose(): void;
}
