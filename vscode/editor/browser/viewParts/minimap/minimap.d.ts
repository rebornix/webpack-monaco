import 'vs/css!./minimap';
import { ViewPart } from 'vs/editor/browser/view/viewPart';
import { ViewContext } from 'vs/editor/common/view/viewContext';
import { RenderingContext, RestrictedRenderingContext } from 'vs/editor/common/view/renderingContext';
import { FastDomNode } from 'vs/base/browser/fastDomNode';
import * as viewEvents from 'vs/editor/common/view/viewEvents';
export declare class Minimap extends ViewPart {
    private readonly _domNode;
    private readonly _shadow;
    private readonly _canvas;
    private readonly _slider;
    private readonly _sliderHorizontal;
    private readonly _tokensColorTracker;
    private readonly _mouseDownListener;
    private readonly _sliderMouseMoveMonitor;
    private readonly _sliderMouseDownListener;
    private readonly _minimapCharRenderer;
    private _options;
    private _lastRenderData;
    private _buffers;
    constructor(context: ViewContext);
    dispose(): void;
    private _getMinimapDomNodeClassName();
    getDomNode(): FastDomNode<HTMLElement>;
    private _applyLayout();
    private _getBuffer();
    private _onOptionsMaybeChanged();
    onConfigurationChanged(e: viewEvents.ViewConfigurationChangedEvent): boolean;
    onFlushed(e: viewEvents.ViewFlushedEvent): boolean;
    onLinesChanged(e: viewEvents.ViewLinesChangedEvent): boolean;
    onLinesDeleted(e: viewEvents.ViewLinesDeletedEvent): boolean;
    onLinesInserted(e: viewEvents.ViewLinesInsertedEvent): boolean;
    onScrollChanged(e: viewEvents.ViewScrollChangedEvent): boolean;
    onTokensChanged(e: viewEvents.ViewTokensChangedEvent): boolean;
    onTokensColorsChanged(e: viewEvents.ViewTokensColorsChangedEvent): boolean;
    onZonesChanged(e: viewEvents.ViewZonesChangedEvent): boolean;
    prepareRender(ctx: RenderingContext): void;
    render(renderingCtx: RestrictedRenderingContext): void;
    private renderLines(layout);
    private static _renderUntouchedLines(target, startLineNumber, endLineNumber, minimapLineHeight, lastRenderData);
    private static _renderLine(target, backgroundColor, useLighterFont, renderMinimap, colorTracker, minimapCharRenderer, dy, tabSize, lineData);
}
